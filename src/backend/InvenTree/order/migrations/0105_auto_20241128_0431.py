# Generated by Django 4.2.16 on 2024-11-28 04:31

from django.db import migrations


def update_shipment_date(apps, schema_editor):
    """
    Update the shipment date for existing SalesOrderAllocation objects
    """

    from order.status_codes import SalesOrderStatusGroups

    SalesOrder = apps.get_model('order', 'SalesOrder')

    # Find any orders which are "complete" but missing a shipment date
    orders = SalesOrder.objects.filter(
        status__in=SalesOrderStatusGroups.COMPLETE,
        shipment_date__isnull=True
    )

    order_to_update = []

    for order in orders:
        # Find the latest shipment date for any associated allocations
        shipments = order.shipments.filter(shipment_date__isnull=False)
        latest_shipment = shipments.order_by('-shipment_date').first()

        if not latest_shipment:
            continue

        # Update the order with the new shipment date
        order.shipment_date = latest_shipment.shipment_date

        order_to_update.append(order)
    
    if len(order_to_update) > 0:
        # Bulk update the SalesOrder objects
        SalesOrder.objects.bulk_update(order_to_update, ['shipment_date'])

        print(f"Updated {len(order_to_update)} SalesOrder objects with missing shipment_date")

        # Assert that the orders now have a shipment date
        for order in order_to_update:
            assert order.shipment_date is not None, f"SalesOrder {order.pk} still has missing shipment_date"


class Migration(migrations.Migration):

    dependencies = [
        ('order', '0104_alter_returnorderlineitem_quantity'),
    ]

    operations = [
        migrations.RunPython(
            update_shipment_date,
            reverse_code=migrations.RunPython.noop
        )
    ]
