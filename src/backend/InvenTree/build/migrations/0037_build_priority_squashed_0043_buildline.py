# Generated by Django 4.2.23 on 2025-07-13 08:20

import InvenTree.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [
        ("build", "0037_build_priority"),
        ("build", "0038_alter_build_responsible"),
        ("build", "0039_auto_20230317_0816"),
        ("build", "0040_auto_20230404_1310"),
        ("build", "0041_alter_build_title"),
        ("build", "0042_alter_build_notes"),
        ("build", "0043_buildline"),
    ]

    dependencies = [
        ("part", "0109_auto_20230517_1048"),
        ("build", "0036_auto_20220707_1101"),
        ("users", "0005_owner_model"),
    ]

    operations = [
        migrations.AddField(
            model_name="build",
            name="priority",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Priority of this build order",
                validators=[django.core.validators.MinValueValidator(0)],
                verbose_name="Build Priority",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="responsible",
            field=models.ForeignKey(
                blank=True,
                help_text="User or group responsible for this build order",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="builds_responsible",
                to="users.owner",
                verbose_name="Responsible",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="metadata",
            field=models.JSONField(
                blank=True,
                help_text="JSON metadata field, for use by external plugins",
                null=True,
                verbose_name="Plugin Metadata",
            ),
        ),
        migrations.AddField(
            model_name="builditem",
            name="metadata",
            field=models.JSONField(
                blank=True,
                help_text="JSON metadata field, for use by external plugins",
                null=True,
                verbose_name="Plugin Metadata",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="barcode_data",
            field=models.CharField(
                blank=True,
                help_text="Third party barcode data",
                max_length=500,
                verbose_name="Barcode Data",
            ),
        ),
        migrations.AddField(
            model_name="build",
            name="barcode_hash",
            field=models.CharField(
                blank=True,
                help_text="Unique hash of barcode data",
                max_length=128,
                verbose_name="Barcode Hash",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="title",
            field=models.CharField(
                blank=True,
                help_text="Brief description of the build (optional)",
                max_length=100,
                verbose_name="Description",
            ),
        ),
        migrations.AlterField(
            model_name="build",
            name="notes",
            field=InvenTree.fields.InvenTreeNotesField(
                blank=True,
                help_text="Markdown notes (optional)",
                max_length=50000,
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.CreateModel(
            name="BuildLine",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=5,
                        default=1,
                        help_text="Required quantity for build order",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "bom_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="build_lines",
                        to="part.bomitem",
                    ),
                ),
                (
                    "build",
                    models.ForeignKey(
                        help_text="Build object",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="build_lines",
                        to="build.build",
                    ),
                ),
            ],
            options={
                "unique_together": {("build", "bom_item")},
                "verbose_name": "Build Order Line Item",
            },
        ),
    ]
