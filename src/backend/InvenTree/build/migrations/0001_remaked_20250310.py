# Generated by Django 4.2.19 on 2025-03-10 22:44

import InvenTree.fields
import InvenTree.models
import build.status_codes
import build.validators
import django.core.validators
from django.db import migrations, models
import generic.states.fields
import generic.states.states
import generic.states.transition
import generic.states.validators


class Migration(migrations.Migration):

    replaces = [('build', '0001_initial'), ('build', '0002_auto_20190520_2204'), ('build', '0003_auto_20190525_2355'), ('build', '0004_auto_20190525_2356'), ('build', '0005_auto_20190604_2217'), ('build', '0006_auto_20190913_1407'), ('build', '0007_auto_20191118_2321'), ('build', '0008_auto_20200201_1247'), ('build', '0009_auto_20200210_1032'), ('build', '0010_auto_20200318_1027'), ('build', '0011_auto_20200406_0123'), ('build', '0012_build_sales_order'), ('build', '0013_auto_20200425_0507'), ('build', '0014_auto_20200425_1243'), ('build', '0015_auto_20200425_1350'), ('build', '0016_auto_20200426_0551'), ('build', '0017_auto_20200426_0612'), ('build', '0018_build_reference'), ('build', '0019_auto_20201019_1302'), ('build', '0020_auto_20201019_1325'), ('build', '0021_auto_20201020_0908_squashed_0026_auto_20201023_1228'), ('build', '0022_buildorderattachment'), ('build', '0023_auto_20201110_0911'), ('build', '0024_auto_20201201_1023'), ('build', '0025_build_target_date'), ('build', '0026_auto_20210216_1539'), ('build', '0027_auto_20210404_2016'), ('build', '0028_builditem_bom_item'), ('build', '0029_auto_20210601_1525'), ('build', '0030_alter_build_reference'), ('build', '0031_build_reference_int'), ('build', '0032_auto_20211014_0632'), ('build', '0033_auto_20211128_0151'), ('build', '0034_alter_build_reference_int'), ('build', '0035_alter_build_notes'), ('build', '0036_auto_20220707_1101'), ('build', '0037_build_priority'), ('build', '0038_alter_build_responsible'), ('build', '0039_auto_20230317_0816'), ('build', '0040_auto_20230404_1310'), ('build', '0041_alter_build_title'), ('build', '0042_alter_build_notes'), ('build', '0043_buildline'), ('build', '0044_auto_20230528_1410'), ('build', '0045_builditem_build_line'), ('build', '0046_auto_20230606_1033'), ('build', '0047_auto_20230606_1058'), ('build', '0048_build_project_code'), ('build', '0049_alter_builditem_build_line'), ('build', '0050_auto_20240508_0138'), ('build', '0051_delete_buildorderattachment'), ('build', '0052_build_status_custom_key_alter_build_status'), ('build', '0053_alter_build_part')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Build',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', models.JSONField(blank=True, help_text='JSON metadata field, for use by external plugins', null=True, verbose_name='Plugin Metadata')),
                ('reference_int', models.BigIntegerField(default=0)),
                ('notes', InvenTree.fields.InvenTreeNotesField(blank=True, help_text='Markdown notes (optional)', max_length=50000, null=True, verbose_name='Notes')),
                ('barcode_data', models.CharField(blank=True, help_text='Third party barcode data', max_length=500, verbose_name='Barcode Data')),
                ('barcode_hash', models.CharField(blank=True, help_text='Unique hash of barcode data', max_length=128, verbose_name='Barcode Hash')),
                ('reference', models.CharField(default=build.validators.generate_next_build_reference, help_text='Build Order Reference', max_length=64, unique=True, validators=[build.validators.validate_build_order_reference], verbose_name='Reference')),
                ('title', models.CharField(blank=True, help_text='Brief description of the build (optional)', max_length=100, verbose_name='Description')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Number of stock items to build', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Build Quantity')),
                ('completed', models.PositiveIntegerField(default=0, help_text='Number of stock items which have been completed', verbose_name='Completed items')),
                ('status', generic.states.fields.InvenTreeCustomStatusModelField(choices=[(10, 'Pending'), (20, 'Production'), (25, 'On Hold'), (30, 'Cancelled'), (40, 'Complete')], default=10, help_text='Build status code', validators=[django.core.validators.MinValueValidator(0), generic.states.validators.CustomStatusCodeValidator(status_class=build.status_codes.BuildStatus)], verbose_name='Build Status')),
                ('batch', models.CharField(blank=True, help_text='Batch code for this build output', max_length=100, null=True, verbose_name='Batch Code')),
                ('creation_date', models.DateField(auto_now_add=True, verbose_name='Creation Date')),
                ('start_date', models.DateField(blank=True, help_text='Scheduled start date for this build order', null=True, verbose_name='Build start date')),
                ('target_date', models.DateField(blank=True, help_text='Target date for build completion. Build will be overdue after this date.', null=True, verbose_name='Target completion date')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion Date')),
                ('link', InvenTree.fields.InvenTreeURLField(blank=True, help_text='Link to external URL', max_length=2000, verbose_name='External Link')),
                ('priority', models.PositiveIntegerField(default=0, help_text='Priority of this build order', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Build Priority')),
                ('status_custom_key', generic.states.fields.ExtraInvenTreeCustomStatusModelField(blank=True, default=None, help_text='Additional status information for this item', null=True, validators=[generic.states.validators.CustomStatusCodeValidator(status_class=build.status_codes.BuildStatus)], verbose_name='Custom status key')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'verbose_name': 'Build Order',
                'verbose_name_plural': 'Build Orders',
            },
            bases=(InvenTree.models.InvenTreeAttachmentMixin, InvenTree.models.PluginValidationMixin, generic.states.transition.StateTransitionMixin, generic.states.states.StatusCodeMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BuildItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', models.JSONField(blank=True, help_text='JSON metadata field, for use by external plugins', null=True, verbose_name='Plugin Metadata')),
                ('quantity', models.DecimalField(decimal_places=5, default=1, help_text='Stock quantity to allocate to build', max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
            ],
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BuildLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=5, default=1, help_text='Required quantity for build order', max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
            ],
            options={
                'verbose_name': 'Build Order Line Item',
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
    ]
