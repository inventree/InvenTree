# Generated by Django 4.2.19 on 2025-03-11 06:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    replaces = [('users', '0001_initial'), ('users', '0002_auto_20201004_0158'), ('users', '0003_auto_20201005_2227'), ('users', '0004_auto_20210113_1909'), ('users', '0005_owner_model'), ('users', '0006_alter_ruleset_name'), ('users', '0007_alter_ruleset_name'), ('users', '0008_apitoken'), ('users', '0009_auto_20231020_2356'), ('users', '0010_alter_apitoken_key'), ('users', '0011_auto_20240523_1640'), ('users', '0012_alter_ruleset_can_view'), ('users', '0013_migrate_mfa_20240408_1659'), ('users', '0014_userprofile')]

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '__first__'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', models.JSONField(blank=True, help_text='JSON metadata field, for use by external plugins', null=True, verbose_name='Plugin Metadata')),
                ('language', models.CharField(blank=True, help_text='Preferred language for the user', max_length=10, null=True, verbose_name='Language')),
                ('theme', models.JSONField(blank=True, help_text='Settings for the web UI as JSON - do not edit manually!', null=True, verbose_name='Theme')),
                ('widgets', models.JSONField(blank=True, help_text='Settings for the dashboard widgets as JSON - do not edit manually!', null=True, verbose_name='Widgets')),
                ('displayname', models.CharField(blank=True, help_text='Chosen display name for the user', max_length=255, null=True, verbose_name='Display Name')),
                ('position', models.CharField(blank=True, help_text='Main job title or position', max_length=255, null=True, verbose_name='Position')),
                ('status', models.CharField(blank=True, help_text='User status message', max_length=2000, null=True, verbose_name='Status')),
                ('location', models.CharField(blank=True, help_text='User location information', max_length=2000, null=True, verbose_name='Location')),
                ('active', models.BooleanField(default=True, help_text='User is actively using the system', verbose_name='Active')),
                ('contact', models.CharField(blank=True, help_text='Preferred contact information for the user', max_length=255, null=True, verbose_name='Contact')),
                ('type', models.CharField(choices=[('bot', 'Bot'), ('internal', 'Internal'), ('external', 'External'), ('guest', 'Guest')], default='internal', help_text='Which type of user is this?', max_length=10, verbose_name='Type')),
                ('organisation', models.CharField(blank=True, help_text='Users primary organisation/affiliation', max_length=255, null=True, verbose_name='Organisation')),
                ('primary_group', models.ForeignKey(blank=True, help_text='Primary group for the user', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_users', to='auth.group', verbose_name='Primary Group')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_id', models.PositiveIntegerField(blank=True, null=True)),
                ('owner_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='ApiToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', models.JSONField(blank=True, help_text='JSON metadata field, for use by external plugins', null=True, verbose_name='Plugin Metadata')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('key', models.CharField(db_index=True, default=users.models.default_token, max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(50)], verbose_name='Key')),
                ('name', models.CharField(blank=True, help_text='Custom token name', max_length=100, verbose_name='Token Name')),
                ('expiry', models.DateField(default=users.models.default_token_expiry, help_text='Token expiry date', verbose_name='Expiry Date')),
                ('last_seen', models.DateField(blank=True, help_text='Last time the token was used', null=True, verbose_name='Last Seen')),
                ('revoked', models.BooleanField(default=False, help_text='Token has been revoked', verbose_name='Revoked')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_tokens', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'API Token',
                'verbose_name_plural': 'API Tokens',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RuleSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('admin', 'Admin'), ('part_category', 'Part Categories'), ('part', 'Parts'), ('stocktake', 'Stocktake'), ('stock_location', 'Stock Locations'), ('stock', 'Stock Items'), ('build', 'Build Orders'), ('purchase_order', 'Purchase Orders'), ('sales_order', 'Sales Orders'), ('return_order', 'Return Orders')], help_text='Permission set', max_length=50)),
                ('can_view', models.BooleanField(default=False, help_text='Permission to view items', verbose_name='View')),
                ('can_add', models.BooleanField(default=False, help_text='Permission to add items', verbose_name='Add')),
                ('can_change', models.BooleanField(default=False, help_text='Permissions to edit items', verbose_name='Change')),
                ('can_delete', models.BooleanField(default=False, help_text='Permission to delete items', verbose_name='Delete')),
                ('group', models.ForeignKey(help_text='Group', on_delete=django.db.models.deletion.CASCADE, related_name='rule_sets', to='auth.group')),
            ],
            options={
                'unique_together': {('name', 'group')},
            },
        ),
        migrations.AddConstraint(
            model_name='owner',
            constraint=models.UniqueConstraint(fields=('owner_type', 'owner_id'), name='unique_owner'),
        ),
    ]
