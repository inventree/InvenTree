# Generated by Django 4.2.19 on 2025-03-04 21:56

import InvenTree.models
import InvenTree.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("part", "0133_alter_partcategory__icon"),
        ("common", "0034_alter_inventreecustomuserstatemodel_unique_together_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="PartParameterTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Parameter Name",
                        max_length=100,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "units",
                    models.CharField(
                        blank=True,
                        help_text="Physical units for this parameter",
                        max_length=25,
                        validators=[InvenTree.validators.validate_physical_units],
                        verbose_name="Units",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Parameter description",
                        max_length=250,
                        verbose_name="Description",
                    ),
                ),
                (
                    "checkbox",
                    models.BooleanField(
                        default=False,
                        help_text="Is this parameter a checkbox?",
                        verbose_name="Checkbox",
                    ),
                ),
                (
                    "choices",
                    models.CharField(
                        blank=True,
                        help_text="Valid choices for this parameter (comma-separated)",
                        max_length=5000,
                        verbose_name="Choices",
                    ),
                ),
                (
                    "selectionlist",
                    models.ForeignKey(
                        blank=True,
                        help_text="Selection list for this parameter",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="parameter_templates",
                        to="common.selectionlist",
                        verbose_name="Selection List",
                    ),
                ),
            ],
            options={
                "verbose_name": "Part Parameter Template",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PartCategoryParameterTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "default_value",
                    models.CharField(
                        blank=True,
                        help_text="Default Parameter Value",
                        max_length=500,
                        verbose_name="Default Value",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Part Category",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parameter_templates",
                        to="part.partcategory",
                        verbose_name="Category",
                    ),
                ),
                (
                    "parameter_template",
                    models.ForeignKey(
                        help_text="Parameter Template",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="part_categories",
                        to="generic.partparametertemplate",
                        verbose_name="Parameter Template",
                    ),
                ),
            ],
            options={
                "verbose_name": "Part Category Parameter Template",
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PartParameter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="JSON metadata field, for use by external plugins",
                        null=True,
                        verbose_name="Plugin Metadata",
                    ),
                ),
                (
                    "data",
                    models.CharField(
                        help_text="Parameter Value",
                        max_length=500,
                        validators=[django.core.validators.MinLengthValidator(1)],
                        verbose_name="Data",
                    ),
                ),
                (
                    "data_numeric",
                    models.FloatField(blank=True, default=None, null=True),
                ),
                (
                    "part",
                    models.ForeignKey(
                        help_text="Parent Part",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parameters",
                        to="part.part",
                        verbose_name="Part",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        help_text="Parameter Template",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instances",
                        to="generic.partparametertemplate",
                        verbose_name="Template",
                    ),
                ),
            ],
            options={
                "verbose_name": "Part Parameter",
                "unique_together": {("part", "template")},
            },
            bases=(InvenTree.models.PluginValidationMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name="partcategoryparametertemplate",
            constraint=models.UniqueConstraint(
                fields=("category", "parameter_template"),
                name="unique_category_parameter_template_pair",
            ),
        ),
    ]
