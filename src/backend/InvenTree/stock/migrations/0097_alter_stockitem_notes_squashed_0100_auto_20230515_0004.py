# Generated by Django 4.2.23 on 2025-07-13 12:16

import InvenTree.fields
import django.core.validators
from django.db import migrations, models
import taggit.managers


class Migration(migrations.Migration):

    replaces = [
        ("stock", "0097_alter_stockitem_notes"),
        ("stock", "0098_auto_20230427_2033"),
        ("stock", "0099_alter_stockitem_status"),
        ("stock", "0100_auto_20230515_0004"),
    ]

    dependencies = [
        ("taggit", "0005_auto_20220424_2025"),
        ("stock", "0096_auto_20230330_1121"),
    ]

    operations = [
        migrations.AlterField(
            model_name="stockitem",
            name="notes",
            field=InvenTree.fields.InvenTreeNotesField(
                blank=True,
                help_text="Markdown notes (optional)",
                max_length=50000,
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.AlterField(
            model_name="stockitem",
            name="status",
            field=models.PositiveIntegerField(
                choices=[
                    (10, "OK"),
                    (50, "Attention needed"),
                    (55, "Damaged"),
                    (60, "Destroyed"),
                    (70, "Lost"),
                    (65, "Rejected"),
                    (75, "Quarantined"),
                ],
                default=10,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AddField(
            model_name="stockitem",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="stocklocation",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
    ]
