# Generated by Django 4.2.19 on 2025-03-11 06:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import taggit.managers


class Migration(migrations.Migration):

    replaces = [('stock', '0116_alter_stockitem_link')]

    initial = True

    dependencies = [
        ('build', '0004_remaked_20250311'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('users', '0001_remaked_20250311'),
        ('stock', '0001_remaked_20250311'),
        ('auth', '__first__'),
        ('company', '0002_remaked_20250311'),
        ('order', '0004_remaked_20250311'),
        ('part', '0003_remaked_20250311'),
    ]

    operations = [
        migrations.AddField(
            model_name='stocklocation',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='Select Owner', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_locations', to='users.owner', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='stocklocation',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to='stock.stocklocation', verbose_name='parent'),
        ),
        migrations.AddField(
            model_name='stocklocation',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='stockitemtracking',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_info', to='stock.stockitem'),
        ),
        migrations.AddField(
            model_name='stockitemtracking',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockitemtestresult',
            name='stock_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='stock.stockitem'),
        ),
        migrations.AddField(
            model_name='stockitemtestresult',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='part.parttesttemplate'),
        ),
        migrations.AddField(
            model_name='stockitemtestresult',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='belongs_to',
            field=models.ForeignKey(blank=True, help_text='Is this item installed in another item?', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='installed_parts', to='stock.stockitem', verbose_name='Installed In'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='build',
            field=models.ForeignKey(blank=True, help_text='Build for this stock item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='build_outputs', to='build.build', verbose_name='Source Build'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='consumed_by',
            field=models.ForeignKey(blank=True, help_text='Build order which consumed this stock item', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consumed_stock', to='build.build', verbose_name='Consumed By'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='customer',
            field=models.ForeignKey(blank=True, help_text='Customer', limit_choices_to={'is_customer': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_stock', to='company.company', verbose_name='Customer'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='location',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='Where is this stock item located?', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='stock_items', to='stock.stocklocation', verbose_name='Stock Location'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='Select Owner', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_items', to='users.owner', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to='stock.stockitem', verbose_name='Parent Stock Item'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='part',
            field=models.ForeignKey(help_text='Base part', limit_choices_to={'virtual': False}, on_delete=django.db.models.deletion.CASCADE, related_name='stock_items', to='part.part', verbose_name='Base Part'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='purchase_order',
            field=models.ForeignKey(blank=True, help_text='Purchase order for this stock item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_items', to='order.purchaseorder', verbose_name='Source Purchase Order'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='sales_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_items', to='order.salesorder', verbose_name='Destination Sales Order'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='stocktake_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stocktake_stock', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='supplier_part',
            field=models.ForeignKey(blank=True, help_text='Select a matching supplier part for this stock item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_items', to='company.supplierpart', verbose_name='Supplier Part'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
