# Generated by Django 4.2.23 on 2025-07-13 11:56

import InvenTree.fields
import common.currency
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import djmoney.models.validators
import part.models


class Migration(migrations.Migration):

    replaces = [
        ("part", "0084_partcategory_icon"),
        ("part", "0085_partparametertemplate_description"),
        ("part", "0086_auto_20220912_0007"),
        ("part", "0087_bomitem_consumable"),
        ("part", "0088_alter_partparametertemplate_name"),
        ("part", "0089_auto_20221112_0128"),
        ("part", "0090_auto_20221115_0816"),
        ("part", "0091_partstocktake"),
        ("part", "0092_part_last_stocktake"),
        ("part", "0093_auto_20230115_1404"),
        ("part", "0094_alter_part_units"),
        ("part", "0095_alter_part_responsible"),
        ("part", "0096_auto_20230211_0029"),
        ("part", "0097_partstocktakereport"),
        ("part", "0098_auto_20230214_1115"),
        ("part", "0099_alter_bomitem_inherited"),
        ("part", "0100_alter_bomitem_reference"),
        ("part", "0101_bomitem_validated"),
    ]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("part", "0083_auto_20220731_2357"),
    ]

    operations = [
        migrations.AddField(
            model_name="partcategory",
            name="icon",
            field=models.CharField(
                blank=True,
                help_text="Icon (optional)",
                max_length=100,
                verbose_name="Icon",
            ),
        ),
        migrations.AddField(
            model_name="partparametertemplate",
            name="description",
            field=models.CharField(
                blank=True,
                help_text="Parameter description",
                max_length=250,
                verbose_name="Description",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="barcode_data",
            field=models.CharField(
                blank=True,
                help_text="Third party barcode data",
                max_length=500,
                verbose_name="Barcode Data",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="barcode_hash",
            field=models.CharField(
                blank=True,
                help_text="Unique hash of barcode data",
                max_length=128,
                verbose_name="Barcode Hash",
            ),
        ),
        migrations.AddField(
            model_name="bomitem",
            name="consumable",
            field=models.BooleanField(
                default=False,
                help_text="This BOM item is consumable (it is not tracked in build orders)",
                verbose_name="Consumable",
            ),
        ),
        migrations.AlterField(
            model_name="partparametertemplate",
            name="name",
            field=models.CharField(
                help_text="Parameter Name",
                max_length=100,
                unique=True,
                verbose_name="Name",
            ),
        ),
        migrations.AlterField(
            model_name="part",
            name="base_cost",
            field=models.DecimalField(
                decimal_places=6,
                default=0,
                help_text="Minimum charge (e.g. stocking fee)",
                max_digits=19,
                validators=[django.core.validators.MinValueValidator(0)],
                verbose_name="base cost",
            ),
        ),
        migrations.AlterField(
            model_name="partinternalpricebreak",
            name="price",
            field=InvenTree.fields.InvenTreeModelMoneyField(
                currency_choices=[],
                decimal_places=6,
                default_currency="",
                help_text="Unit price at specified quantity",
                max_digits=19,
                null=True,
                validators=[djmoney.models.validators.MinMoneyValidator(0)],
                verbose_name="Price",
            ),
        ),
        migrations.AlterField(
            model_name="partsellpricebreak",
            name="price",
            field=InvenTree.fields.InvenTreeModelMoneyField(
                currency_choices=[],
                decimal_places=6,
                default_currency="",
                help_text="Unit price at specified quantity",
                max_digits=19,
                null=True,
                validators=[djmoney.models.validators.MinMoneyValidator(0)],
                verbose_name="Price",
            ),
        ),
        migrations.AddField(
            model_name="partcategory",
            name="structural",
            field=models.BooleanField(
                default=False,
                help_text="Parts may not be directly assigned to a structural category, but may be assigned to child categories.",
                verbose_name="Structural",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="last_stocktake",
            field=models.DateField(
                blank=True, null=True, verbose_name="Last Stocktake"
            ),
        ),
        migrations.AddField(
            model_name="partinternalpricebreak",
            name="updated",
            field=models.DateTimeField(
                auto_now=True,
                help_text="Timestamp of last update",
                null=True,
                verbose_name="Updated",
            ),
        ),
        migrations.AddField(
            model_name="partsellpricebreak",
            name="updated",
            field=models.DateTimeField(
                auto_now=True,
                help_text="Timestamp of last update",
                null=True,
                verbose_name="Updated",
            ),
        ),
        migrations.CreateModel(
            name="PartPricing",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("AUD", "AUD - Australian Dollar"),
                            ("CAD", "CAD - Canadian Dollar"),
                            ("CNY", "CNY - Chinese Yuan"),
                            ("EUR", "EUR - Euro"),
                            ("GBP", "GBP - British Pound"),
                            ("JPY", "JPY - Japanese Yen"),
                            ("NZD", "NZD - New Zealand Dollar"),
                            ("USD", "USD - US Dollar"),
                        ],
                        default=common.currency.currency_code_default,
                        help_text="Currency used to cache pricing calculations",
                        max_length=10,
                        verbose_name="Currency",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp of last update",
                        null=True,
                        verbose_name="Updated",
                    ),
                ),
                ("scheduled_for_update", models.BooleanField(default=False)),
                (
                    "bom_cost_min_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "bom_cost_min",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Minimum cost of component parts",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Minimum BOM Cost",
                    ),
                ),
                (
                    "bom_cost_max_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "bom_cost_max",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Maximum cost of component parts",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Maximum BOM Cost",
                    ),
                ),
                (
                    "purchase_cost_min_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "purchase_cost_min",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Minimum historical purchase cost",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Minimum Purchase Cost",
                    ),
                ),
                (
                    "purchase_cost_max_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "purchase_cost_max",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Maximum historical purchase cost",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Maximum Purchase Cost",
                    ),
                ),
                (
                    "internal_cost_min_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "internal_cost_min",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Minimum cost based on internal price breaks",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Minimum Internal Price",
                    ),
                ),
                (
                    "internal_cost_max_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "internal_cost_max",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Maximum cost based on internal price breaks",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Maximum Internal Price",
                    ),
                ),
                (
                    "supplier_price_min_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "supplier_price_min",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Minimum price of part from external suppliers",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Minimum Supplier Price",
                    ),
                ),
                (
                    "supplier_price_max_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "supplier_price_max",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Maximum price of part from external suppliers",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Maximum Supplier Price",
                    ),
                ),
                (
                    "variant_cost_min_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "variant_cost_min",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Calculated minimum cost of variant parts",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Minimum Variant Cost",
                    ),
                ),
                (
                    "variant_cost_max_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "variant_cost_max",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Calculated maximum cost of variant parts",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Maximum Variant Cost",
                    ),
                ),
                (
                    "overall_min_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "overall_min",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Calculated overall minimum cost",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Minimum Cost",
                    ),
                ),
                (
                    "overall_max_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "overall_max",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Calculated overall maximum cost",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Maximum Cost",
                    ),
                ),
                (
                    "sale_price_min_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "sale_price_min",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Minimum sale price based on price breaks",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Minimum Sale Price",
                    ),
                ),
                (
                    "sale_price_max_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "sale_price_max",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Maximum sale price based on price breaks",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Maximum Sale Price",
                    ),
                ),
                (
                    "sale_history_min_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "sale_history_min",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Minimum historical sale price",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Minimum Sale Cost",
                    ),
                ),
                (
                    "sale_history_max_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "sale_history_max",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Maximum historical sale price",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Maximum Sale Cost",
                    ),
                ),
                (
                    "part",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pricing_data",
                        to="part.part",
                        verbose_name="Part",
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="part",
            name="units",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Units of measure for this part",
                max_length=20,
                null=True,
                verbose_name="Units",
            ),
        ),
        migrations.AlterField(
            model_name="part",
            name="responsible",
            field=models.ForeignKey(
                blank=True,
                help_text="User responsible for this part",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="parts_responible",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Responsible",
            ),
        ),
        migrations.CreateModel(
            name="PartStocktake",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=5,
                        help_text="Total available stock at time of stocktake",
                        max_digits=19,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        auto_now_add=True,
                        help_text="Date stocktake was performed",
                        verbose_name="Date",
                    ),
                ),
                (
                    "note",
                    models.CharField(
                        blank=True,
                        help_text="Additional notes",
                        max_length=250,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "part",
                    models.ForeignKey(
                        help_text="Part for stocktake",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stocktakes",
                        to="part.part",
                        verbose_name="Part",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who performed this stocktake",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="part_stocktakes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "cost_max",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Estimated maximum cost of stock on hand",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Maximum Stock Cost",
                    ),
                ),
                (
                    "cost_max_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "cost_min",
                    InvenTree.fields.InvenTreeModelMoneyField(
                        blank=True,
                        currency_choices=[],
                        decimal_places=6,
                        default_currency="",
                        help_text="Estimated minimum cost of stock on hand",
                        max_digits=19,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                        verbose_name="Minimum Stock Cost",
                    ),
                ),
                (
                    "cost_min_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[], default="", editable=False, max_length=3
                    ),
                ),
                (
                    "item_count",
                    models.IntegerField(
                        default=1,
                        help_text="Number of individual stock entries at time of stocktake",
                        verbose_name="Item Count",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PartStocktakeReport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(auto_now_add=True, verbose_name="Date")),
                (
                    "report",
                    models.FileField(
                        help_text="Stocktake report file (generated internally)",
                        upload_to=part.models.save_stocktake_report,
                        verbose_name="Report",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who requested this stocktake report",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stocktake_reports",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "part_count",
                    models.IntegerField(
                        default=0,
                        help_text="Number of parts covered by stocktake",
                        verbose_name="Part Count",
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="bomitem",
            name="inherited",
            field=models.BooleanField(
                default=False,
                help_text="This BOM item is inherited by BOMs for variant parts",
                verbose_name="Gets inherited",
            ),
        ),
        migrations.AlterField(
            model_name="bomitem",
            name="reference",
            field=models.CharField(
                blank=True,
                help_text="BOM item reference",
                max_length=5000,
                verbose_name="Reference",
            ),
        ),
        migrations.AddField(
            model_name="bomitem",
            name="validated",
            field=models.BooleanField(
                default=False,
                help_text="This BOM item has been validated",
                verbose_name="Validated",
            ),
        ),
    ]
