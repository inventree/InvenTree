# Generated by Django 4.2.19 on 2025-03-11 06:59

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    replaces = [('part', '0135_alter_part_link')]

    initial = True

    dependencies = [
        ('users', '0001_remaked_20250311'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('part', '0002_remaked_20250311'),
    ]

    operations = [
        migrations.AddField(
            model_name='part',
            name='responsible_owner',
            field=models.ForeignKey(blank=True, help_text='Owner responsible for this part', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parts_responsible', to='users.owner', verbose_name='Responsible'),
        ),
        migrations.AddField(
            model_name='part',
            name='revision_of',
            field=models.ForeignKey(blank=True, help_text='Is this part a revision of another part?', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revisions', to='part.part', verbose_name='Revision Of'),
        ),
        migrations.AddField(
            model_name='part',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='part',
            name='variant_of',
            field=models.ForeignKey(blank=True, help_text='Is this part a variant of another part?', limit_choices_to={'is_template': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variants', to='part.part', verbose_name='Variant Of'),
        ),
        migrations.AddField(
            model_name='bomitemsubstitute',
            name='bom_item',
            field=models.ForeignKey(help_text='Parent BOM item', on_delete=django.db.models.deletion.CASCADE, related_name='substitutes', to='part.bomitem', verbose_name='BOM Item'),
        ),
        migrations.AddField(
            model_name='bomitemsubstitute',
            name='part',
            field=models.ForeignKey(help_text='Substitute part', limit_choices_to={'component': True}, on_delete=django.db.models.deletion.CASCADE, related_name='substitute_items', to='part.part', verbose_name='Part'),
        ),
        migrations.AddField(
            model_name='bomitem',
            name='part',
            field=models.ForeignKey(help_text='Select parent part', limit_choices_to={'assembly': True}, on_delete=django.db.models.deletion.CASCADE, related_name='bom_items', to='part.part', verbose_name='Part'),
        ),
        migrations.AddField(
            model_name='bomitem',
            name='sub_part',
            field=models.ForeignKey(help_text='Select part to be used in BOM', limit_choices_to={'component': True}, on_delete=django.db.models.deletion.CASCADE, related_name='used_in', to='part.part', verbose_name='Sub part'),
        ),
        migrations.AlterUniqueTogether(
            name='partstar',
            unique_together={('part', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='partsellpricebreak',
            unique_together={('part', 'quantity')},
        ),
        migrations.AlterUniqueTogether(
            name='partrelated',
            unique_together={('part_1', 'part_2')},
        ),
        migrations.AlterUniqueTogether(
            name='partparameter',
            unique_together={('part', 'template')},
        ),
        migrations.AlterUniqueTogether(
            name='partinternalpricebreak',
            unique_together={('part', 'quantity')},
        ),
        migrations.AlterUniqueTogether(
            name='partcategorystar',
            unique_together={('category', 'user')},
        ),
        migrations.AddConstraint(
            model_name='partcategoryparametertemplate',
            constraint=models.UniqueConstraint(fields=('category', 'parameter_template'), name='unique_category_parameter_template_pair'),
        ),
        migrations.AddConstraint(
            model_name='part',
            constraint=models.UniqueConstraint(fields=('name', 'IPN', 'revision'), name='unique_part'),
        ),
        migrations.AlterUniqueTogether(
            name='bomitemsubstitute',
            unique_together={('part', 'bom_item')},
        ),
    ]
