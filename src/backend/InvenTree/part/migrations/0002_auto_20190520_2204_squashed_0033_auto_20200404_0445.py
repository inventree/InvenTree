# Generated by Django 4.2.23 on 2025-07-13 11:51

import InvenTree.fields
import InvenTree.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import part.models
import stdimage.models


class Migration(migrations.Migration):

    replaces = [
        ("part", "0002_auto_20190520_2204"),
        ("part", "0003_auto_20190525_2226"),
        ("part", "0004_auto_20190525_2356"),
        ("part", "0005_auto_20190526_1119"),
        ("part", "0006_auto_20190526_1215"),
        ("part", "0007_auto_20190602_1944"),
        ("part", "0008_auto_20190618_0042"),
        ("part", "0009_part_virtual"),
        ("part", "0010_auto_20190620_2135"),
        ("part", "0011_part_revision"),
        ("part", "0012_auto_20190627_2144"),
        ("part", "0013_auto_20190628_0951"),
        ("part", "0014_partparameter"),
        ("part", "0015_auto_20190820_0251"),
        ("part", "0016_auto_20190820_0257"),
        ("part", "0017_bomitem_checksum"),
        ("part", "0018_auto_20190907_0941"),
        ("part", "0019_auto_20190908_0404"),
        ("part", "0020_auto_20190908_0404"),
        ("part", "0021_auto_20190908_0916"),
        ("part", "0022_auto_20190908_0918"),
        ("part", "0023_auto_20190913_1401"),
        ("part", "0024_auto_20191118_2139"),
        ("part", "0025_auto_20191118_2316"),
        ("part", "0026_auto_20200131_1022"),
        ("part", "0027_auto_20200202_1024"),
        ("part", "0028_auto_20200203_1007"),
        ("part", "0029_auto_20200223_0901"),
        ("part", "0030_auto_20200318_1027"),
        ("part", "0031_auto_20200318_1044"),
        ("part", "0032_auto_20200322_0453"),
        ("part", "0033_auto_20200404_0445"),
    ]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("stock", "0001_initial"),
        ("company", "0002_auto_20190520_2204"),
        ("part", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="partcategory",
            name="default_location",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                help_text="Default location for parts in this category",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="default_categories",
                to="stock.stocklocation",
            ),
        ),
        migrations.AddField(
            model_name="partcategory",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="children",
                to="part.partcategory",
            ),
        ),
        migrations.AddField(
            model_name="partattachment",
            name="part",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attachments",
                to="part.part",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="bom_checked_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="boms_checked",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="category",
            field=models.ForeignKey(
                blank=True,
                help_text="Part category",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="parts",
                to="part.partcategory",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="default_location",
            field=models.ForeignKey(
                blank=True,
                help_text="Where is this item normally stored?",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="default_parts",
                to="stock.stocklocation",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="default_supplier",
            field=models.ForeignKey(
                blank=True,
                help_text="Default supplier part",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="default_parts",
                to="company.supplierpart",
            ),
        ),
        migrations.AddField(
            model_name="bomitem",
            name="part",
            field=models.ForeignKey(
                help_text="Select parent part",
                limit_choices_to={"active": True, "buildable": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bom_items",
                to="part.part",
            ),
        ),
        migrations.AddField(
            model_name="bomitem",
            name="sub_part",
            field=models.ForeignKey(
                help_text="Select part to be used in BOM",
                limit_choices_to={"active": True, "consumable": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="used_in",
                to="part.part",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="partstar",
            unique_together={("part", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="part",
            unique_together={("name", "variant")},
        ),
        migrations.AlterUniqueTogether(
            name="bomitem",
            unique_together={("part", "sub_part")},
        ),
        migrations.AddField(
            model_name="part",
            name="is_template",
            field=models.BooleanField(
                default=False, help_text="Is this part a template part?"
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="variant_of",
            field=models.ForeignKey(
                blank=True,
                help_text="Is this part a variant of another part?",
                limit_choices_to={"active": True, "is_template": True},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="variants",
                to="part.part",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="revision",
            field=models.CharField(
                blank=True, help_text="Part rerevision code", max_length=32
            ),
        ),
        migrations.AlterUniqueTogether(
            name="part",
            unique_together={("name", "revision")},
        ),
        migrations.RemoveField(
            model_name="part",
            name="variant",
        ),
        migrations.AlterField(
            model_name="part",
            name="name",
            field=models.CharField(
                help_text="Part name (must be unique)", max_length=100, unique=True
            ),
        ),
        migrations.AlterUniqueTogether(
            name="part",
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name="part",
            name="revision",
        ),
        migrations.RemoveField(
            model_name="part",
            name="buildable",
        ),
        migrations.RemoveField(
            model_name="part",
            name="consumable",
        ),
        migrations.AddField(
            model_name="part",
            name="assembly",
            field=models.BooleanField(
                default=False,
                help_text="Can this part be built from other parts?",
                verbose_name="Assembly",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="component",
            field=models.BooleanField(
                default=True,
                help_text="Can this part be used to build other parts?",
                verbose_name="Component",
            ),
        ),
        migrations.AlterField(
            model_name="bomitem",
            name="part",
            field=models.ForeignKey(
                help_text="Select parent part",
                limit_choices_to={"active": True, "assembly": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bom_items",
                to="part.part",
            ),
        ),
        migrations.AlterField(
            model_name="bomitem",
            name="sub_part",
            field=models.ForeignKey(
                help_text="Select part to be used in BOM",
                limit_choices_to={"active": True, "component": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="used_in",
                to="part.part",
            ),
        ),
        migrations.AlterField(
            model_name="partcategory",
            name="name",
            field=models.CharField(
                max_length=100,
                unique=True,
                validators=[InvenTree.validators.validate_tree_name],
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="virtual",
            field=models.BooleanField(
                default=False,
                help_text="Is this a virtual part, such as a software product or license?",
            ),
        ),
        migrations.AlterField(
            model_name="part",
            name="name",
            field=models.CharField(help_text="Part name", max_length=100),
        ),
        migrations.AddField(
            model_name="part",
            name="revision",
            field=models.CharField(
                blank=True, help_text="Part revision or version number", max_length=100
            ),
        ),
        migrations.AddField(
            model_name="bomitem",
            name="reference",
            field=models.CharField(
                blank=True, help_text="BOM item reference", max_length=500
            ),
        ),
        migrations.AlterField(
            model_name="bomitem",
            name="note",
            field=models.CharField(
                blank=True, help_text="BOM item notes", max_length=500
            ),
        ),
        migrations.AlterField(
            model_name="bomitem",
            name="part",
            field=models.ForeignKey(
                help_text="Select parent part",
                limit_choices_to={"assembly": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bom_items",
                to="part.part",
            ),
        ),
        migrations.AlterField(
            model_name="bomitem",
            name="sub_part",
            field=models.ForeignKey(
                help_text="Select part to be used in BOM",
                limit_choices_to={"component": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="used_in",
                to="part.part",
            ),
        ),
        migrations.CreateModel(
            name="PartParameterTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Parameter Name", max_length=100, unique=True
                    ),
                ),
                (
                    "units",
                    models.CharField(
                        blank=True, help_text="Parameter Units", max_length=25
                    ),
                ),
            ],
            options={
                "verbose_name": "Part Parameter Template",
            },
        ),
        migrations.CreateModel(
            name="PartParameter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.CharField(help_text="Parameter Value", max_length=500)),
                (
                    "part",
                    models.ForeignKey(
                        help_text="Parent Part",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parameters",
                        to="part.part",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        default=1,
                        help_text="Parameter Template",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instances",
                        to="part.partparametertemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Part Parameter",
                "unique_together": {("part", "template")},
            },
        ),
        migrations.AddField(
            model_name="bomitem",
            name="checksum",
            field=models.CharField(
                blank=True, help_text="BOM line checksum", max_length=128
            ),
        ),
        migrations.AddField(
            model_name="partcategory",
            name="level",
            field=models.PositiveIntegerField(default=0, editable=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="partcategory",
            name="lft",
            field=models.PositiveIntegerField(default=0, editable=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="partcategory",
            name="rght",
            field=models.PositiveIntegerField(default=0, editable=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="partcategory",
            name="tree_id",
            field=models.PositiveIntegerField(db_index=True, default=0, editable=False),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="part",
            name="category",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                help_text="Part category",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="parts",
                to="part.partcategory",
            ),
        ),
        migrations.AlterField(
            model_name="part",
            name="default_location",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                help_text="Where is this item normally stored?",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="default_parts",
                to="stock.stocklocation",
            ),
        ),
        migrations.AlterField(
            model_name="partcategory",
            name="parent",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="children",
                to="part.partcategory",
            ),
        ),
        migrations.AlterField(
            model_name="part",
            name="URL",
            field=InvenTree.fields.InvenTreeURLField(
                blank=True, help_text="Link to external URL", max_length=2000
            ),
        ),
        migrations.AlterField(
            model_name="bomitem",
            name="quantity",
            field=models.DecimalField(
                decimal_places=5,
                default=1.0,
                help_text="BOM quantity for this BOM item",
                max_digits=15,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="part",
            name="units",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Stock keeping units for this part",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="part",
            name="notes",
            field=models.TextField(
                help_text="Part notes - supports Markdown formatting"
            ),
        ),
        migrations.AlterField(
            model_name="partcategory",
            name="name",
            field=models.CharField(
                max_length=100, validators=[InvenTree.validators.validate_tree_name]
            ),
        ),
        migrations.AlterField(
            model_name="part",
            name="IPN",
            field=models.CharField(
                blank=True, help_text="Internal Part Number", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="part",
            name="notes",
            field=models.TextField(
                blank=True, help_text="Part notes - supports Markdown formatting"
            ),
        ),
        migrations.AlterField(
            model_name="bomitem",
            name="part",
            field=models.ForeignKey(
                help_text="Select parent part",
                limit_choices_to={"assembly": True, "is_template": False},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bom_items",
                to="part.part",
            ),
        ),
        migrations.AlterField(
            model_name="bomitem",
            name="sub_part",
            field=models.ForeignKey(
                help_text="Select part to be used in BOM",
                limit_choices_to={"component": True, "is_template": False},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="used_in",
                to="part.part",
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="creation_date",
            field=models.DateField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="part",
            name="creation_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="parts_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="part",
            name="responsible",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="parts_responible",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="partattachment",
            name="attachment",
            field=models.FileField(
                help_text="Select file to attach", upload_to="attachments"
            ),
        ),
        migrations.AlterField(
            model_name="part",
            name="image",
            field=stdimage.models.StdImageField(
                blank=True,
                force_min_size=False,
                null=True,
                upload_to=part.models.rename_part_image,
                variations={},
            ),
        ),
    ]
