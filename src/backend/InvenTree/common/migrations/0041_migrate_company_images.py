# Generated by Django 4.2.22 on 2025-08-01 11:28

from django.db import migrations
from django.core.files.base import ContentFile
from pathlib import Path



def forwards_migrate_company_images(apps, schema_editor):
    """
    For each Company that has an image file set:
    1) Create a new InvenTreeImage with content_type=Company, object_id=company.pk
    2) Copy the file reference into the new InvenTreeImage.image field
    3) Mark it as primary
    """

    Company = apps.get_model('company', 'Company')
    InvenTreeImage = apps.get_model('common', 'InvenTreeImage')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    company_ct = ContentType.objects.get_for_model(Company)

    # Iterate over all companies that have an image set
    for comp in Company.objects.exclude(image__isnull=True).exclude(image=''):
        
        try:
            with comp.image.open('rb') as f:
                data = f.read()
        except IOError:
            continue
        
        new_img = InvenTreeImage(
            content_type_id=company_ct.id,
            object_id=comp.pk,
            primary=True,
        )
        
        filename = Path(comp.image.name).name
        
        new_img.image.save(
            filename,
            ContentFile(data),
            save=True  
        )
            
        new_img.save()
        
def reverse_migrate_inventree_images_to_company(apps, schema_editor):
    """Reverse migration: move InvenTreeImage back to Company image field."""
    Company = apps.get_model('company', 'Company')
    InvenTreeImage = apps.get_model('common', 'InvenTreeImage')
    
    ContentType = apps.get_model('contenttypes', 'ContentType')

    company_ct = ContentType.objects.get_for_model(Company)
    
    # Get all InvenTreeImages for Company objects
    company_images = InvenTreeImage.objects.filter(
        content_type=company_ct,
        primary=True
    )
    
    for img in company_images:
        try:
            company = Company.objects.get(pk=img.object_id)
            company.image = img.image
            company.save()
            print(f"Restored image for company: {company.name} (ID: {company.pk})")
        except Company.DoesNotExist:
            print(f"Company with ID {img.object_id} not found, skipping...")


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0075_company_tax_id'),
        ('common', '0040_inventreeimage'),  
        ('contenttypes', '0002_remove_content_type_name'),
    ]

   
    operations = [
        # First, run the data migration
        migrations.RunPython(
            forwards_migrate_company_images,
            reverse_migrate_inventree_images_to_company,
        ),

    ]